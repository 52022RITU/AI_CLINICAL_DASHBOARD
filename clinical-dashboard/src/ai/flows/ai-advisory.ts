// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Provides an AI advisory based on patient data, vitals, and clinical notes.
 *
 * - aiAdvisory - A function that generates an AI advisory for patient care.
 * - AiAdvisoryInput - The input type for the aiAdvisory function.
 * - AiAdvisoryOutput - The return type for the aiAdvisory function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AiAdvisoryInputSchema = z.object({
  patientDetails: z.string().describe('Patient details including name, gender, age, NAT ID, nationality, and insurance information.'),
  vitals: z.string().describe('Patient vitals: temperature, blood pressure, heart rate, weight, and height.'),
  chiefComplaint: z.string().describe('The patient’s primary reason for seeking medical attention.'),
  treatmentPlan: z.string().describe('The proposed treatment plan for the patient.'),
  supportingNotes: z.string().describe('Any additional notes or observations regarding the patient’s condition.'),
  medications: z.string().describe('List of medications prescribed to the patient.'),
  icdCodes: z.string().describe('ICD codes associated with the patient’s diagnosis.'),
  investigations: z.string().describe('Details of any investigations or tests conducted.'),
});
export type AiAdvisoryInput = z.infer<typeof AiAdvisoryInputSchema>;

const AiAdvisoryOutputSchema = z.object({
  advisory: z.string().describe('An AI-generated advisory based on the patient data, vitals, and clinical notes.'),
});
export type AiAdvisoryOutput = z.infer<typeof AiAdvisoryOutputSchema>;

export async function aiAdvisory(input: AiAdvisoryInput): Promise<AiAdvisoryOutput> {
  return aiAdvisoryFlow(input);
}

const prompt = ai.definePrompt({
  name: 'aiAdvisoryPrompt',
  input: {schema: AiAdvisoryInputSchema},
  output: {schema: AiAdvisoryOutputSchema},
  prompt: `You are an AI assistant providing medical advice to doctors.

  Based on the following patient data, vitals, and clinical notes, provide an AI advisory that the doctor can use as one of many data points for making informed decisions about patient care and treatment plans. Focus on potential risks, alternative treatments, and relevant considerations.

  Patient Details: {{{patientDetails}}}
  Vitals: {{{vitals}}}
  Chief Complaint: {{{chiefComplaint}}}
  Treatment Plan: {{{treatmentPlan}}}
  Supporting Notes: {{{supportingNotes}}}
  Medications: {{{medications}}}
  ICD Codes: {{{icdCodes}}}
  Investigations: {{{investigations}}}

  AI Advisory:`, 
});

const aiAdvisoryFlow = ai.defineFlow(
  {
    name: 'aiAdvisoryFlow',
    inputSchema: AiAdvisoryInputSchema,
    outputSchema: AiAdvisoryOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
